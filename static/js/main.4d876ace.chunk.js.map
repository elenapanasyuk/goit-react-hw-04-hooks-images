{"version":3,"sources":["components/Modal/Modal.module.css","components/ImageGalleryItem/ImageGalleryItem.module.css","components/Button/Button.module.css","components/Loader/Loader.module.css","components/ImageGallery/ImageGallery.module.css","App.module.css","components/Searchbar/Searchbar.module.css","components/Loader/Loader.js","services/imagesApi.js","components/Searchbar/Searchbar.js","components/ImageGalleryItem/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","components/Modal/Modal.js","components/Button/Button.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","LoaderView","className","s","loaderContainer","type","color","height","width","timeout","fetchImage","searchQuery","page","a","axios","get","response","data","Searchbar","onSubmit","useState","setSearchQuery","header","form","event","preventDefault","trim","toast","error","searchbutton","label","input","autoComplete","autoFocus","placeholder","value","onChange","currentTarget","toLowerCase","ImageGalleryItem","image","toggleModal","item","src","webformatURL","alt","tags","onClick","status","largeImageURL","ImageGallery","images","list","map","id","Modal","useEffect","window","addEventListener","handleKeyDown","removeEventListener","code","overlay","target","modal","img","Button","btnContainer","loadmorebtn","App","setImages","setPage","targetImage","showModal","setShowModal","isLoading","setIsLoading","showButton","setShowButton","searchImages","then","hits","prevState","onScrollPage","totalHits","current","onCheckButton","length","catch","finally","setTimeout","scrollTo","top","document","documentElement","clientHeight","behavior","app","Loader","autoClose","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.4d876ace.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"overlay\":\"Modal_overlay__2GjdW\",\"modal\":\"Modal_modal__P3_V5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ImageGalleryItem_item__2ey0n\",\"image\":\"ImageGalleryItem_image__2xsbt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btnContainer\":\"Button_btnContainer__TI2wR\",\"loadmorebtn\":\"Button_loadmorebtn__1JN2t\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loaderContainer\":\"Loader_loaderContainer__19ipN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ImageGallery_list__3mqUc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__16ZpL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Searchbar_header__34uEY\",\"form\":\"Searchbar_form__XuKjc\",\"searchbutton\":\"Searchbar_searchbutton__2-Qcg\",\"label\":\"Searchbar_label__1BV3w\",\"input\":\"Searchbar_input__2C4aO\"};","import React from 'react';\nimport Loader from 'react-loader-spinner';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\nimport s from './Loader.module.css';\n\nconst LoaderView = () => {\n  return (\n    <div className={s.loaderContainer}>\n      <Loader\n        type=\"ThreeDots\"\n        color=\"#00BFFF\"\n        height={100}\n        width={100}\n        timeout={3000}\n      />\n    </div>\n  );\n};\nexport default LoaderView;\n","import axios from 'axios';\n\nconst API_KEY = '19039117-820a9ced6542bb27a724ef11a';\nconst BASE_URL = 'https://pixabay.com/api';\n\nconst fetchImage = async (searchQuery, page) => {\n  const response = await axios.get(\n    `${BASE_URL}/?image_type=photo&orientation=horizontal&q=${searchQuery}&page=${page}&per_page=8&key=${API_KEY}`,\n  );\n  return response.data;\n};\nexport default fetchImage;\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport s from './Searchbar.module.css';\n\nfunction Searchbar({ onSubmit }) {\n  const [searchQuery, setSearchQuery] = useState('');\n\n  const handleInputChange = event => {\n    setSearchQuery(event.currentTarget.value.toLowerCase());\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    if (searchQuery.trim() === '') {\n      toast.error('Please add search query');\n      return;\n    }\n\n    onSubmit(searchQuery);\n    setSearchQuery('');\n  };\n  return (\n    <header className={s.header}>\n      <form className={s.form} onSubmit={handleSubmit}>\n        <button type=\"submit\" className={s.searchbutton}>\n          <span className={s.label}>Search</span>\n        </button>\n\n        <input\n          className={s.input}\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search images and photos\"\n          value={searchQuery}\n          onChange={handleInputChange}\n        />\n      </form>\n    </header>\n  );\n}\n\nSearchbar.propTypes = {\n  value: PropTypes.string,\n  handleSubmit: PropTypes.func,\n  handleInputChange: PropTypes.func,\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default Searchbar;\n\n// class Searchbar1 extends Component {\n// state = {\n//   searchQuery: '',\n// };\n\n// handleInputChange = event => {\n//   this.setState({ searchQuery: event.currentTarget.value.toLowerCase() });\n// };\n\n// handleSubmit = event => {\n//   event.preventDefault();\n\n//   if (this.state.searchQuery.trim() === '') {\n//     toast.error('Please add search query');\n//     return;\n//   }\n\n//   this.props.onSubmit(this.state.searchQuery);\n//   this.setState({ searchQuery: '' });\n// };\n\n//   render() {\n//     const { searchQuery } = this.state;\n//     return (\n//       <header className={s.header}>\n//         <form className={s.form} onSubmit={this.handleSubmit}>\n//           <button type=\"submit\" className={s.searchbutton}>\n//             <span className={s.label}>Search</span>\n//           </button>\n\n//           <input\n//             className={s.input}\n//             type=\"text\"\n//             autoComplete=\"off\"\n//             autoFocus\n//             placeholder=\"Search images and photos\"\n//             value={searchQuery}\n//             onChange={this.handleInputChange}\n//           />\n//         </form>\n//       </header>\n//     );\n//   }\n// }\n","import PropTypes from 'prop-types';\nimport s from './ImageGalleryItem.module.css';\n\nconst ImageGalleryItem = ({ image, toggleModal }) => {\n  const onClick = () => {\n    toggleModal({\n      status: true,\n      src: image.largeImageURL,\n      alt: image.tags,\n    });\n  };\n  return (\n    <li className={s.item}>\n      <img\n        src={image.webformatURL}\n        alt={image.tags}\n        className={s.image}\n        onClick={onClick}\n      />\n    </li>\n  );\n};\n\nImageGalleryItem.propTypes = {\n  image: PropTypes.object.isRequired,\n  toggleModal: PropTypes.func.isRequired,\n};\n\nexport default ImageGalleryItem;\n","import PropTypes from 'prop-types';\nimport ImageGalleryItem from '../ImageGalleryItem';\nimport s from './ImageGallery.module.css';\n\nconst ImageGallery = ({ images, toggleModal }) => {\n  return (\n    <ul className={s.list}>\n      {images.map(image => (\n        <ImageGalleryItem\n          key={image.id}\n          image={image}\n          toggleModal={toggleModal}\n        />\n      ))}\n    </ul>\n  );\n};\n\nImageGallery.propTypes = {\n  images: PropTypes.array.isRequired,\n  toggleModal: PropTypes.func.isRequired,\n};\n\nexport default ImageGallery;\n","import PropTypes from 'prop-types';\nimport React, { useEffect } from 'react';\nimport s from './Modal.module.css';\n\nfunction Modal({ alt, src, toggleModal }) {\n  useEffect(() => {\n    window.addEventListener('keydown', handleKeyDown);\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  });\n\n  const handleKeyDown = event => {\n    if (event.code === 'Escape') {\n      toggleModal({ status: false });\n    }\n  };\n\n  const backdropClick = event => {\n    if (event.target === event.currentTarget) {\n      toggleModal({ status: false });\n    }\n  };\n  return (\n    <div className={s.overlay} onClick={backdropClick}>\n      <div className={s.modal}>\n        <img className={s.img} src={src} alt={alt} />\n      </div>\n    </div>\n  );\n}\n\nModal.propTypes = {\n  toggleModal: PropTypes.func.isRequired,\n  alt: PropTypes.string.isRequired,\n  src: PropTypes.string.isRequired,\n};\nexport default Modal;\n\n// class Modal2 extends Component {\n// componentDidMount() {\n//   window.addEventListener('keydown', this.handleKeyDown);\n// }\n\n// componentWillUnmount() {\n//   window.removeEventListener('keydown', this.handleKeyDown);\n// }\n\n// handleKeyDown = event => {\n//   if (event.code === 'Escape') {\n//     this.props.toggleModal({ status: false });\n//   }\n// };\n\n// handleBackdropClick = event => {\n//   if (event.target === event.currentTarget) {\n//     this.props.toggleModal({ status: false });\n//   }\n// };\n\n//   render() {\n//     const { src, alt } = this.props;\n//     return (\n//       <div className={s.overlay} onClick={backdropClick}>\n//         <div className={s.modal}>\n//           <img className={s.img} src={src} alt={alt} />\n//         </div>\n//       </div>\n//     );\n//   }\n// }\n","import PropTypes from 'prop-types';\nimport s from './Button.module.css';\n\nconst Button = ({ onClick }) => {\n  return (\n    <div className={s.btnContainer}>\n      <button type=\"button\" className={s.loadmorebtn} onClick={onClick}>\n        Load More\n      </button>\n    </div>\n  );\n};\n\nButton.propTypes = {\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default Button;\n","import { useState, useEffect } from 'react';\nimport LoaderView from './components/Loader';\nimport { ToastContainer, toast } from 'react-toastify';\nimport fetchImage from './services/imagesApi';\nimport Searchbar from './components/Searchbar';\nimport ImageGallery from './components/ImageGallery';\nimport Modal from './components/Modal';\nimport Button from './components/Button';\nimport 'react-toastify/dist/ReactToastify.css';\nimport s from './App.module.css';\n\nfunction App() {\n  const [searchQuery, setSearchQuery] = useState('');\n  const [images, setImages] = useState([]);\n  const [page, setPage] = useState(1);\n  const [showModal, setShowModal] = useState({\n    status: false,\n    targetImage: null,\n  });\n  const [isLoading, setIsLoading] = useState(false);\n  const [showButton, setShowButton] = useState(false);\n\n  useEffect(() => {\n    setPage(1);\n    searchImages(searchQuery, 1);\n  }, [searchQuery]);\n\n  function searchImages(searchQuery, page) {\n    if (!searchQuery) {\n      setImages([]);\n      setShowButton(false);\n      return;\n    }\n\n    setIsLoading(true);\n\n    fetchImage(searchQuery, page)\n      .then(data => {\n        if (page === 1) {\n          setImages(data.hits);\n        } else {\n          setImages(prevState => [...prevState, ...data.hits]);\n          onScrollPage();\n        }\n        onCheckButton(data.totalHits, images.length + data.hits.length);\n        setPage(page => page + 1);\n      })\n      .catch(error => toast.error('Smth went wrong:( please try again'))\n      .finally(() => setIsLoading(false));\n  }\n\n  function onCheckButton(totalHits, current) {\n    if (totalHits > current) {\n      setShowButton(true);\n    } else {\n      setShowButton(false);\n    }\n    if (!totalHits) {\n      toast.error('No result:( try smth else');\n      return;\n    }\n  }\n\n  function toggleModal({ status, src, alt }) {\n    if (status) {\n      setShowModal({\n        targetImage: { src, alt },\n        status: true,\n      });\n    } else {\n      setShowModal({\n        targetImage: null,\n        status: false,\n      });\n    }\n  }\n\n  const onSubmit = value => {\n    setSearchQuery(value);\n  };\n\n  const onScrollPage = () => {\n    setTimeout(() => {\n      window.scrollTo({\n        top: document.documentElement.clientHeight,\n        behavior: 'smooth',\n      });\n    }, 1200);\n  };\n  return (\n    <div className={s.app}>\n      <Searchbar onSubmit={onSubmit} />\n      {isLoading && <LoaderView />}\n      {images.length > 0 && (\n        <ImageGallery images={images} toggleModal={toggleModal} />\n      )}\n      {showModal.status && (\n        <Modal\n          src={showModal.targetImage.src}\n          alt={showModal.targetImage.alt}\n          toggleModal={toggleModal}\n        />\n      )}\n      {showButton && <Button onClick={() => searchImages(searchQuery, page)} />}\n\n      <ToastContainer autoClose={3000} />\n    </div>\n  );\n}\n\nexport default App;\n\n// class App extends Component {\n// state = {\n//   searchQuery: '',\n//   images: [],\n//   totalHits: 0,\n//   largeImageURL: '',\n//   page: 1,\n//   error: null,\n//   isLoading: false,\n//   showModal: false,\n//   showButton: false,\n//   message: '',\n//   targetImage: null,\n// };\n\n// componentDidMount() {\n//   this.searchImages();\n// }\n\n// componentDidUpdate(prevProps, prevState) {\n//   const { searchQuery, page } = this.state;\n//   if (prevState.searchQuery !== searchQuery) {\n//     this.searchImages(searchQuery, 1);\n//     this.setState({ page: 1 });\n//   }\n//   if (prevState.page !== page) {\n//     this.searchImages(searchQuery, page);\n//   }\n// }\n\n// searchImages(searchQuery = '', page = 1) {\n//   if (searchQuery !== '') {\n//     this.setState({\n//       isLoading: true,\n//     });\n\n//     fetchImage(searchQuery, page)\n//       .then(data => {\n//         if (page === 1) {\n//           this.setState({ totalHits: data.totalHits, images: data.hits });\n//         } else {\n//           this.setState(prevState => ({\n//             images: [...prevState.images, ...data.hits],\n//           }));\n//           this.onScrollPage();\n//         }\n//         this.onCheckButton();\n//       })\n//       .catch(error =>\n//         this.setState({ error: 'Smth went wrong:( please try again' }),\n//       )\n//       .finally(() => this.setState({ isLoading: false }));\n//   } else {\n//     this.setState({\n//       images: [],\n//       showButton: false,\n//     });\n//   }\n// }\n\n// onSubmit = value => {\n//   this.setState({ searchQuery: value });\n// };\n\n// onIncrementPage = () => {\n//   this.setState(prevState => ({ page: prevState.page + 1 }));\n// };\n\n// onScrollPage = () => {\n//   setTimeout(() => {\n//     window.scrollTo({\n//       top: document.documentElement.clientHeight,\n//       behavior: 'smooth',\n//     });\n//   }, 1200);\n// };\n\n// onCheckButton = () => {\n//   const { totalHits, images } = this.state;\n//   if (totalHits > images.length) {\n//     this.setState({ showButton: true });\n//   } else {\n//     this.setState({ showButton: false });\n//   }\n//   if (!totalHits) {\n//     toast.error('No result:( try smth else');\n//     return;\n//   }\n// };\n\n// toggleModal = ({ status, src, alt }) => {\n//   if (status) {\n//     this.setState({\n//       targetImage: { src, alt },\n//       showModal: true,\n//     });\n//   } else {\n//     this.setState({\n//       targetImage: null,\n//       showModal: false,\n//     });\n//   }\n// };\n\n//   render() {\n//     const {\n//       images,\n//       isLoading,\n//       showModal,\n//       targetImage,\n//       showButton,\n//     } = this.state;\n//     return (\n//       <div className={s.app}>\n//         <Searchbar onSubmit={this.onSubmit} />\n//         {isLoading && <LoaderView />}\n//         {images.length > 0 && (\n//           <ImageGallery images={images} toggleModal={this.toggleModal} />\n//         )}\n//         {showModal && (\n//           <Modal\n//             src={targetImage.src}\n//             alt={targetImage.alt}\n//             toggleModal={this.toggleModal}\n//           />\n//         )}\n//         {showButton && <Button onClick={this.onIncrementPage} />}\n//         <ToastContainer autoClose={3000} />\n//       </div>\n//     );\n//   }\n// }\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}